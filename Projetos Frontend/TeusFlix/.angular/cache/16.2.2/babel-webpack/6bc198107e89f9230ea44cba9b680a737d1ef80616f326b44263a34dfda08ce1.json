{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"https://api.themoviedb.org/3\";\n    this.apiKey = \"19bffd15c3bdb0bedc458c0ec3e924c2\";\n  }\n  // banner API Data\n  bannerApiData() {\n    return this.http.get(`${this.baseUrl}/trending/all/week?api_key=${this.apiKey}&language=pt-BR`);\n  }\n  // trending Movies API Data\n  trendingMovieApiData() {\n    return this.http.get(`${this.baseUrl}/trending/movie/day?api_key=${this.apiKey}&language=pt-BR`);\n  }\n  // Movie Details API Data\n  movieDetails(data) {\n    return this.http.get(`${this.baseUrl}/movie/${data}?api_key=${this.apiKey}&language=pt-BR`);\n  }\n  // Movie Trailer API Data\n  movieVideo(data) {\n    return this.http.get(`${this.baseUrl}/movie/${data}/videos?api_key=${this.apiKey}&language=pt-BR`);\n  }\n  // Movie Cast API Data\n  movieCast(data) {\n    return this.http.get(`${this.baseUrl}/movie/${data}/credits?api_key=${this.apiKey}&language=pt-BR`);\n  }\n  // Novo método para pesquisar filmes\n  searchMovie(data) {\n    return this.http.get(`${this.baseUrl}/search/movie?api_key=${this.apiKey}&query=${data.movieName}&language=pt-BR`);\n  }\n  fetchActionMovies() {\n    return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=28&language=pt-BR`);\n  }\n  fetchAdventureMovies() {\n    return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=12&language=pt-BR`);\n  }\n  fetchAnimationMovies() {\n    return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=16&language=pt-BR`);\n  }\n  fetchComedyMovies() {\n    return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=35&language=pt-BR`);\n  }\n  fetchDocumentaryMovies() {\n    return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=99&language=pt-BR`);\n  }\n  fetchScienceFictionMovies() {\n    return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=878&language=pt-BR`);\n  }\n  fetchThrillerMovies() {\n    return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=53&language=pt-BR`);\n  }\n}\n_class = MovieApiService;\n_class.ɵfac = function MovieApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["MovieApiService","constructor","http","baseUrl","apiKey","bannerApiData","get","trendingMovieApiData","movieDetails","data","movieVideo","movieCast","searchMovie","movieName","fetchActionMovies","fetchAdventureMovies","fetchAnimationMovies","fetchComedyMovies","fetchDocumentaryMovies","fetchScienceFictionMovies","fetchThrillerMovies","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\etec\\Documents\\GitHub\\AppDeFilmes\\TeusFlix\\src\\app\\services\\movie-api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieApiService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  baseUrl = \"https://api.themoviedb.org/3\";\r\n  apiKey = \"19bffd15c3bdb0bedc458c0ec3e924c2\";\r\n\r\n  // banner API Data\r\n  bannerApiData(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/trending/all/week?api_key=${this.apiKey}&language=pt-BR`);\r\n  }\r\n\r\n  // trending Movies API Data\r\n  trendingMovieApiData(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/trending/movie/day?api_key=${this.apiKey}&language=pt-BR`);\r\n  }\r\n\r\n  // Movie Details API Data\r\n  movieDetails(data: any): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/movie/${data}?api_key=${this.apiKey}&language=pt-BR`);\r\n  }\r\n\r\n  // Movie Trailer API Data\r\n  movieVideo(data: any): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/movie/${data}/videos?api_key=${this.apiKey}&language=pt-BR`);\r\n  }\r\n\r\n  // Movie Cast API Data\r\n  movieCast(data: any): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/movie/${data}/credits?api_key=${this.apiKey}&language=pt-BR`);\r\n  }\r\n\r\n  // Novo método para pesquisar filmes\r\n  searchMovie(data: any): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/search/movie?api_key=${this.apiKey}&query=${data.movieName}&language=pt-BR`);\r\n  }\r\n\r\nfetchActionMovies(): Observable<any> {\r\n  return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=28&language=pt-BR`);\r\n}\r\n\r\n\r\nfetchAdventureMovies(): Observable<any> {\r\n  return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=12&language=pt-BR`);\r\n}\r\n\r\n\r\nfetchAnimationMovies(): Observable<any> {\r\n  return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=16&language=pt-BR`);\r\n}\r\n\r\n\r\nfetchComedyMovies(): Observable<any> {\r\n  return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=35&language=pt-BR`);\r\n}\r\n\r\n\r\nfetchDocumentaryMovies(): Observable<any> {\r\n  return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=99&language=pt-BR`);\r\n}\r\n\r\n\r\nfetchScienceFictionMovies(): Observable<any> {\r\n  return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=878&language=pt-BR`);\r\n}\r\n\r\n\r\nfetchThrillerMovies(): Observable<any> {\r\n  return this.http.get(`${this.baseUrl}/discover/movie?api_key=${this.apiKey}&with_genres=53&language=pt-BR`);\r\n}\r\n\r\n}\r\n"],"mappings":";;;AAOA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,OAAO,GAAG,8BAA8B;IACxC,KAAAC,MAAM,GAAG,kCAAkC;EAHH;EAKxC;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,8BAA8B,IAAI,CAACC,MAAM,iBAAiB,CAAC;EACjG;EAEA;EACAG,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,+BAA+B,IAAI,CAACC,MAAM,iBAAiB,CAAC;EAClG;EAEA;EACAI,YAAYA,CAACC,IAAS;IACpB,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,UAAUM,IAAI,YAAY,IAAI,CAACL,MAAM,iBAAiB,CAAC;EAC7F;EAEA;EACAM,UAAUA,CAACD,IAAS;IAClB,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,UAAUM,IAAI,mBAAmB,IAAI,CAACL,MAAM,iBAAiB,CAAC;EACpG;EAEA;EACAO,SAASA,CAACF,IAAS;IACjB,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,UAAUM,IAAI,oBAAoB,IAAI,CAACL,MAAM,iBAAiB,CAAC;EACrG;EAEA;EACAQ,WAAWA,CAACH,IAAS;IACnB,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,yBAAyB,IAAI,CAACC,MAAM,UAAUK,IAAI,CAACI,SAAS,iBAAiB,CAAC;EACpH;EAEFC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,2BAA2B,IAAI,CAACC,MAAM,gCAAgC,CAAC;EAC7G;EAGAW,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACb,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,2BAA2B,IAAI,CAACC,MAAM,gCAAgC,CAAC;EAC7G;EAGAY,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACd,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,2BAA2B,IAAI,CAACC,MAAM,gCAAgC,CAAC;EAC7G;EAGAa,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACf,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,2BAA2B,IAAI,CAACC,MAAM,gCAAgC,CAAC;EAC7G;EAGAc,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAAChB,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,2BAA2B,IAAI,CAACC,MAAM,gCAAgC,CAAC;EAC7G;EAGAe,yBAAyBA,CAAA;IACvB,OAAO,IAAI,CAACjB,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,2BAA2B,IAAI,CAACC,MAAM,iCAAiC,CAAC;EAC9G;EAGAgB,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAAClB,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,2BAA2B,IAAI,CAACC,MAAM,gCAAgC,CAAC;EAC7G;;SApEaJ,eAAe;;mBAAfA,MAAe,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAfxB,MAAe;EAAAyB,OAAA,EAAfzB,MAAe,CAAA0B,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}